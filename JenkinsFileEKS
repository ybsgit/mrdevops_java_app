
pipeline{

agent any 

stages{
    stage('Create ECR'){
       agent{
        docker{
          image "hashicorp/terraform"
          reuseNode true 
          args  '--entrypoint=""'
       }
       }
       steps{
        withCredentials([usernamePassword(credentialsId: 'aws-cred-01', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {

                        sh """
                        ls -la
                        cd eks_module 
                        terraform init 
                        terraform plan --var-file=config/terraform.tfvars 
                        terraform apply --var-file=config/terraform.tfvars --auto-approve
                        """
       }}
    }
    stage("Update EKS Cluster Credentials"){
        steps{
        withCredentials([usernamePassword(credentialsId: 'aws-cred-01', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
            sh """
            aws eks update-kubeconfig --region us-east-1 --name "demo-cluster1"

            """
        }
        }
    }
    stage('Use kubectl with EKS config'){
        agent{
            docker{
                image "bitnami/kubectl"
                reuseNode true 
                 args  '--entrypoint="" -v /var/lib/jenkins/.kube/config:/tmp/.kube/config'
            }
        }
        steps{
            sh """
            pwd 
            ls -la
            kubectl get pods --kubeconfig=/tmp/.kube/config
           """
        }
    }
}
}